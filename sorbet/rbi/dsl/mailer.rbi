# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Mailer`.
# Please instead update this file by running `bin/tapioca dsl Mailer`.

class Mailer
  class << self
    sig { params(api_key_id: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def api_key_created(api_key_id); end

    sig do
      params(
        user_id: T.untyped,
        api_key_name: T.untyped,
        enabled_scopes: T.untyped,
        commit_url: T.untyped
      ).returns(::ActionMailer::MessageDelivery)
    end
    def api_key_revoked(user_id, api_key_name, enabled_scopes, commit_url); end

    sig { params(email: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def deletion_complete(email); end

    sig { params(email: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def deletion_failed(email); end

    sig { params(user: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def email_confirmation(user); end

    sig { params(user: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def email_reset(user); end

    sig { params(user: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def email_reset_update(user); end

    sig do
      params(
        pushed_by_user_id: T.untyped,
        version_id: T.untyped,
        notified_user_id: T.untyped
      ).returns(::ActionMailer::MessageDelivery)
    end
    def gem_pushed(pushed_by_user_id, version_id, notified_user_id); end

    sig do
      params(
        yanked_by_user_id: T.untyped,
        version_id: T.untyped,
        notified_user_id: T.untyped
      ).returns(::ActionMailer::MessageDelivery)
    end
    def gem_yanked(yanked_by_user_id, version_id, notified_user_id); end

    sig { params(user_id: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def mfa_notification(user_id); end

    sig { params(user_id: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def notifiers_changed(user_id); end

    sig { params(user: T.untyped, template_name: T.untyped).returns(::ActionMailer::MessageDelivery) }
    def reset_api_key(user, template_name); end

    sig { returns(::ActionMailer::MessageDelivery) }
    def roadie_options; end
  end
end
